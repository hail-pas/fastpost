"""init

Revision ID: 5104a7fbd7ed
Revises: 
Create Date: 2021-06-17 17:53:57.925236

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5104a7fbd7ed'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('group',
    sa.Column('id', sa.Integer(), nullable=False, comment='ID'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
    sa.Column('label', sa.String(length=50), nullable=False, comment='组名称'),
    sa.Column('remark', sa.String(length=200), nullable=True, comment='备注'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('label')
    )
    op.create_index(op.f('ix_group_id'), 'group', ['id'], unique=False)
    op.create_table('group_permission',
    sa.Column('id', sa.Integer(), nullable=False, comment='ID'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_group_permission_id'), 'group_permission', ['id'], unique=False)
    op.create_table('group_user',
    sa.Column('id', sa.Integer(), nullable=False, comment='ID'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_group_user_id'), 'group_user', ['id'], unique=False)
    op.create_table('permission',
    sa.Column('id', sa.Integer(), nullable=False, comment='ID'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
    sa.Column('label', sa.String(length=50), nullable=False, comment='权限名称'),
    sa.Column('code', sa.String(length=20), nullable=False, comment='权限代码'),
    sa.Column('remark', sa.String(length=200), nullable=True, comment='备注'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('label')
    )
    op.create_index(op.f('ix_permission_id'), 'permission', ['id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False, comment='ID'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='更新时间'),
    sa.Column('username', sa.String(length=150), nullable=True, comment='用户名'),
    sa.Column('phone', sa.String(length=11), nullable=False, comment='手机号'),
    sa.Column('password', sa.String(length=100), nullable=False, comment='密码'),
    sa.Column('last_login_at', sa.DateTime(), nullable=True, comment='最近登录时间'),
    sa.Column('remark', sa.String(length=200), nullable=True, comment='备注'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone'),
    comment='用户表'
    )
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_permission_id'), table_name='permission')
    op.drop_table('permission')
    op.drop_index(op.f('ix_group_user_id'), table_name='group_user')
    op.drop_table('group_user')
    op.drop_index(op.f('ix_group_permission_id'), table_name='group_permission')
    op.drop_table('group_permission')
    op.drop_index(op.f('ix_group_id'), table_name='group')
    op.drop_table('group')
    # ### end Alembic commands ###
